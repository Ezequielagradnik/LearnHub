const express = require('express');
const mysql = require('mysql2/promise'); 

const app = express();
app.use(express.json());

// Configuración de la conexión a la base de datos
const dbConfig = {
  host: 'localhost',      
  user: 'root',            
  password: 'rootroot',    
  database: 'DB'    
};

// Creo una conexión a la base de datos
const db = mysql.createPool(dbConfig);


// Obtengo todos los profesores
app.get('/profesores', async (req, res) => {
  try {
    const [rows] = await db.query('SELECT * FROM profesor');
    res.json(rows);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// Obtener un profesor por ID
app.get('/profesores/:id', async (req, res) => {
  const { id } = req.params;
  try {
    const [rows] = await db.query('SELECT * FROM profesor WHERE ID = ?', [id]);
    if (rows.length === 0) {
      return res.status(404).json({ error: 'Profesor no encontrado' });
    }
    res.json(rows[0]);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// Crear un nuevo profesor
app.post('/profesores', async (req, res) => {
  const { Nombre, Apellido, Fecha_de_nacimiento, Email, Materias, Telefono, Valoracion, Pais, Idiomas, Foto, Descripcion_corta } = req.body;
  try {
    const [result] = await db.query('INSERT INTO profesor (Nombre, Apellido, Fecha_de_nacimiento, Email, Materias, Telefono, Valoracion, Pais, Idiomas, Foto, Descripcion_corta) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [Nombre, Apellido, Fecha_de_nacimiento, Email, Materias, Telefono, Valoracion, Pais, Idiomas, Foto, Descripcion_corta]);
    res.status(201).json({ id: result.insertId });
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// Eliminar un profesor
app.delete('/profesores/:id', async (req, res) => {
  const { id } = req.params;
  try {
    const [result] = await db.query('DELETE FROM profesor WHERE ID = ?', [id]);
    if (result.affectedRows === 0) {
      return res.status(404).json({ error: 'Profesor no encontrado' });
    }
    res.json({ message: 'Profesor eliminado' });
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
//Falta Update Profesor
});

