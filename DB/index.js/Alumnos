const express = require('express');
const mysql = require('mysql2/promise'); 

const app = express();
app.use(express.json());

// Configuración de la conexión a la base de datos
const dbConfig = {
  host: 'localhost',      
  user: 'root',            
  password: 'rootroot',    
  database: 'DB'    
};

// Creo una conexión a la base de datos
const db = mysql.createPool(dbConfig);

//obtengo todos los alumnos
app.get('/alumnos', async (req, res) => {
  try {
    const [rows] = await db.query('SELECT * FROM alumnos');
    res.json(rows);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});


// Obtener un alumno por ID
app.get('/alumnos/:id', async (req, res) => {
    const { id } = req.params;
    try {
      const [rows] = await db.query('SELECT * FROM alumnos WHERE ID = ?', [id]);
      if (rows.length === 0) {
        return res.status(404).json({ error: 'alumno no encontrado' });
      }
      res.json(rows[0]);
    } catch (err) {
      res.status(500).json({ error: err.message });
    }
  });
  
  // Crear un nuevo alumno
  app.post('/alumnos', async (req, res) => {
    const { ID	,Nombre	,Apellido	,Fecha, de, nacimiento	,Email		,Telefono	,Valoracion,	Pais	,Idiomas	,Foto,  } = req.body;
    try {
        const [result] = await db.query('INSERT INTO alumno (ID, Nombre, Apellido, Fecha, de, nacimiento, Email, Telefono, Valoracion, Pais, Idiomas, Foto, )');
      res.status(201).json({ id: result.insertId });
    } catch (err) {
      res.status(500).json({ error: err.message });
    }
  });
  
  // Eliminar un alumno
  app.delete('/alumnos/:id', async (req, res) => {
    const { id } = req.params;
    try {
      const [result] = await db.query('DELETE FROM alumno WHERE ID = ?', [id]);
      if (result.affectedRows === 0) {
        return res.status(404).json({ error: 'alumno no encontrado' });
      }
      res.json({ message: 'alumno eliminado' });
    } catch (err) {
      res.status(500).json({ error: err.message });
    }
  });
  
  